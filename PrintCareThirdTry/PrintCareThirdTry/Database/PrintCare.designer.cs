#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrintCareThirdTry.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Print_Care_DB")]
	public partial class PrintCareDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMachine(Machine instance);
    partial void UpdateMachine(Machine instance);
    partial void DeleteMachine(Machine instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertComparision(Comparision instance);
    partial void UpdateComparision(Comparision instance);
    partial void DeleteComparision(Comparision instance);
    partial void InsertPrinting_Job(Printing_Job instance);
    partial void UpdatePrinting_Job(Printing_Job instance);
    partial void DeletePrinting_Job(Printing_Job instance);
    #endregion
		
		public PrintCareDataContext() : 
				base(global::PrintCareThirdTry.Properties.Settings.Default.Print_Care_DBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PrintCareDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PrintCareDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PrintCareDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PrintCareDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Machine> Machines
		{
			get
			{
				return this.GetTable<Machine>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Comparision> Comparisions
		{
			get
			{
				return this.GetTable<Comparision>();
			}
		}
		
		public System.Data.Linq.Table<Printing_Job> Printing_Jobs
		{
			get
			{
				return this.GetTable<Printing_Job>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Machine")]
	public partial class Machine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MachineID;
		
		private string _Manufacture;
		
		private string _Model;
		
		private string _DampingMethod;
		
		private System.Nullable<double> _PrintingWidth;
		
		private System.Nullable<double> _PrintingHeight;
		
		private System.Nullable<int> _ColourUnits;
		
		private System.Nullable<int> _InkControlingValve;
		
		private string _Note;
		
		private System.Nullable<int> _UserID;
		
		private EntitySet<Printing_Job> _Printing_Jobs;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMachineIDChanging(int value);
    partial void OnMachineIDChanged();
    partial void OnManufactureChanging(string value);
    partial void OnManufactureChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnDampingMethodChanging(string value);
    partial void OnDampingMethodChanged();
    partial void OnPrintingWidthChanging(System.Nullable<double> value);
    partial void OnPrintingWidthChanged();
    partial void OnPrintingHeightChanging(System.Nullable<double> value);
    partial void OnPrintingHeightChanged();
    partial void OnColourUnitsChanging(System.Nullable<int> value);
    partial void OnColourUnitsChanged();
    partial void OnInkControlingValveChanging(System.Nullable<int> value);
    partial void OnInkControlingValveChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    #endregion
		
		public Machine()
		{
			this._Printing_Jobs = new EntitySet<Printing_Job>(new Action<Printing_Job>(this.attach_Printing_Jobs), new Action<Printing_Job>(this.detach_Printing_Jobs));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MachineID
		{
			get
			{
				return this._MachineID;
			}
			set
			{
				if ((this._MachineID != value))
				{
					this.OnMachineIDChanging(value);
					this.SendPropertyChanging();
					this._MachineID = value;
					this.SendPropertyChanged("MachineID");
					this.OnMachineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacture", DbType="VarChar(MAX)")]
		public string Manufacture
		{
			get
			{
				return this._Manufacture;
			}
			set
			{
				if ((this._Manufacture != value))
				{
					this.OnManufactureChanging(value);
					this.SendPropertyChanging();
					this._Manufacture = value;
					this.SendPropertyChanged("Manufacture");
					this.OnManufactureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(500)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DampingMethod", DbType="VarChar(MAX)")]
		public string DampingMethod
		{
			get
			{
				return this._DampingMethod;
			}
			set
			{
				if ((this._DampingMethod != value))
				{
					this.OnDampingMethodChanging(value);
					this.SendPropertyChanging();
					this._DampingMethod = value;
					this.SendPropertyChanged("DampingMethod");
					this.OnDampingMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintingWidth", DbType="Float")]
		public System.Nullable<double> PrintingWidth
		{
			get
			{
				return this._PrintingWidth;
			}
			set
			{
				if ((this._PrintingWidth != value))
				{
					this.OnPrintingWidthChanging(value);
					this.SendPropertyChanging();
					this._PrintingWidth = value;
					this.SendPropertyChanged("PrintingWidth");
					this.OnPrintingWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintingHeight", DbType="Float")]
		public System.Nullable<double> PrintingHeight
		{
			get
			{
				return this._PrintingHeight;
			}
			set
			{
				if ((this._PrintingHeight != value))
				{
					this.OnPrintingHeightChanging(value);
					this.SendPropertyChanging();
					this._PrintingHeight = value;
					this.SendPropertyChanged("PrintingHeight");
					this.OnPrintingHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColourUnits", DbType="Int")]
		public System.Nullable<int> ColourUnits
		{
			get
			{
				return this._ColourUnits;
			}
			set
			{
				if ((this._ColourUnits != value))
				{
					this.OnColourUnitsChanging(value);
					this.SendPropertyChanging();
					this._ColourUnits = value;
					this.SendPropertyChanged("ColourUnits");
					this.OnColourUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InkControlingValve", DbType="Int")]
		public System.Nullable<int> InkControlingValve
		{
			get
			{
				return this._InkControlingValve;
			}
			set
			{
				if ((this._InkControlingValve != value))
				{
					this.OnInkControlingValveChanging(value);
					this.SendPropertyChanging();
					this._InkControlingValve = value;
					this.SendPropertyChanged("InkControlingValve");
					this.OnInkControlingValveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Machine_Printing_Job", Storage="_Printing_Jobs", ThisKey="MachineID", OtherKey="MachineID")]
		public EntitySet<Printing_Job> Printing_Jobs
		{
			get
			{
				return this._Printing_Jobs;
			}
			set
			{
				this._Printing_Jobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Machine", Storage="_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Machines.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Machines.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Printing_Jobs(Printing_Job entity)
		{
			this.SendPropertyChanging();
			entity.Machine = this;
		}
		
		private void detach_Printing_Jobs(Printing_Job entity)
		{
			this.SendPropertyChanging();
			entity.Machine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _UserName;
		
		private string _Name;
		
		private string _Password;
		
		private EntitySet<Machine> _Machines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public User()
		{
			this._Machines = new EntitySet<Machine>(new Action<Machine>(this.attach_Machines), new Action<Machine>(this.detach_Machines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Machine", Storage="_Machines", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<Machine> Machines
		{
			get
			{
				return this._Machines;
			}
			set
			{
				this._Machines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Machines(Machine entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Machines(Machine entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comparision")]
	public partial class Comparision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ComparisionID;
		
		private System.Data.Linq.Binary _ScannedItem;
		
		private string _Disition;
		
		private System.Nullable<System.DateTime> _MadeTime;
		
		private System.Nullable<int> _JobID;
		
		private EntityRef<Printing_Job> _Printing_Job;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComparisionIDChanging(int value);
    partial void OnComparisionIDChanged();
    partial void OnScannedItemChanging(System.Data.Linq.Binary value);
    partial void OnScannedItemChanged();
    partial void OnDisitionChanging(string value);
    partial void OnDisitionChanged();
    partial void OnMadeTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnMadeTimeChanged();
    partial void OnJobIDChanging(System.Nullable<int> value);
    partial void OnJobIDChanged();
    #endregion
		
		public Comparision()
		{
			this._Printing_Job = default(EntityRef<Printing_Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComparisionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ComparisionID
		{
			get
			{
				return this._ComparisionID;
			}
			set
			{
				if ((this._ComparisionID != value))
				{
					this.OnComparisionIDChanging(value);
					this.SendPropertyChanging();
					this._ComparisionID = value;
					this.SendPropertyChanged("ComparisionID");
					this.OnComparisionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScannedItem", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ScannedItem
		{
			get
			{
				return this._ScannedItem;
			}
			set
			{
				if ((this._ScannedItem != value))
				{
					this.OnScannedItemChanging(value);
					this.SendPropertyChanging();
					this._ScannedItem = value;
					this.SendPropertyChanged("ScannedItem");
					this.OnScannedItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disition", DbType="VarChar(MAX)")]
		public string Disition
		{
			get
			{
				return this._Disition;
			}
			set
			{
				if ((this._Disition != value))
				{
					this.OnDisitionChanging(value);
					this.SendPropertyChanging();
					this._Disition = value;
					this.SendPropertyChanged("Disition");
					this.OnDisitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MadeTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> MadeTime
		{
			get
			{
				return this._MadeTime;
			}
			set
			{
				if ((this._MadeTime != value))
				{
					this.OnMadeTimeChanging(value);
					this.SendPropertyChanging();
					this._MadeTime = value;
					this.SendPropertyChanged("MadeTime");
					this.OnMadeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID", DbType="Int")]
		public System.Nullable<int> JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					if (this._Printing_Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Printing_Job_Comparision", Storage="_Printing_Job", ThisKey="JobID", OtherKey="JobID", IsForeignKey=true)]
		public Printing_Job Printing_Job
		{
			get
			{
				return this._Printing_Job.Entity;
			}
			set
			{
				Printing_Job previousValue = this._Printing_Job.Entity;
				if (((previousValue != value) 
							|| (this._Printing_Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Printing_Job.Entity = null;
						previousValue.Comparisions.Remove(this);
					}
					this._Printing_Job.Entity = value;
					if ((value != null))
					{
						value.Comparisions.Add(this);
						this._JobID = value.JobID;
					}
					else
					{
						this._JobID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Printing_Job");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Printing_Job")]
	public partial class Printing_Job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobID;
		
		private System.Nullable<double> _StartingPosition;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private string _Sample;
		
		private System.Nullable<int> _colours;
		
		private System.Nullable<System.DateTime> _StartingTime;
		
		private System.Nullable<double> _Height;
		
		private System.Nullable<int> _MachineID;
		
		private System.Nullable<double> _Width;
		
		private string _Note;
		
		private EntitySet<Comparision> _Comparisions;
		
		private EntityRef<Machine> _Machine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobIDChanging(int value);
    partial void OnJobIDChanged();
    partial void OnStartingPositionChanging(System.Nullable<double> value);
    partial void OnStartingPositionChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnSampleChanging(string value);
    partial void OnSampleChanged();
    partial void OncoloursChanging(System.Nullable<int> value);
    partial void OncoloursChanged();
    partial void OnStartingTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartingTimeChanged();
    partial void OnHeightChanging(System.Nullable<double> value);
    partial void OnHeightChanged();
    partial void OnMachineIDChanging(System.Nullable<int> value);
    partial void OnMachineIDChanged();
    partial void OnWidthChanging(System.Nullable<double> value);
    partial void OnWidthChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public Printing_Job()
		{
			this._Comparisions = new EntitySet<Comparision>(new Action<Comparision>(this.attach_Comparisions), new Action<Comparision>(this.detach_Comparisions));
			this._Machine = default(EntityRef<Machine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingPosition", DbType="Float")]
		public System.Nullable<double> StartingPosition
		{
			get
			{
				return this._StartingPosition;
			}
			set
			{
				if ((this._StartingPosition != value))
				{
					this.OnStartingPositionChanging(value);
					this.SendPropertyChanging();
					this._StartingPosition = value;
					this.SendPropertyChanged("StartingPosition");
					this.OnStartingPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample", DbType="VarChar(MAX)")]
		public string Sample
		{
			get
			{
				return this._Sample;
			}
			set
			{
				if ((this._Sample != value))
				{
					this.OnSampleChanging(value);
					this.SendPropertyChanging();
					this._Sample = value;
					this.SendPropertyChanged("Sample");
					this.OnSampleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colours", DbType="Int")]
		public System.Nullable<int> colours
		{
			get
			{
				return this._colours;
			}
			set
			{
				if ((this._colours != value))
				{
					this.OncoloursChanging(value);
					this.SendPropertyChanging();
					this._colours = value;
					this.SendPropertyChanged("colours");
					this.OncoloursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartingTime
		{
			get
			{
				return this._StartingTime;
			}
			set
			{
				if ((this._StartingTime != value))
				{
					this.OnStartingTimeChanging(value);
					this.SendPropertyChanging();
					this._StartingTime = value;
					this.SendPropertyChanged("StartingTime");
					this.OnStartingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Float")]
		public System.Nullable<double> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineID", DbType="Int")]
		public System.Nullable<int> MachineID
		{
			get
			{
				return this._MachineID;
			}
			set
			{
				if ((this._MachineID != value))
				{
					if (this._Machine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMachineIDChanging(value);
					this.SendPropertyChanging();
					this._MachineID = value;
					this.SendPropertyChanged("MachineID");
					this.OnMachineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Float")]
		public System.Nullable<double> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Printing_Job_Comparision", Storage="_Comparisions", ThisKey="JobID", OtherKey="JobID")]
		public EntitySet<Comparision> Comparisions
		{
			get
			{
				return this._Comparisions;
			}
			set
			{
				this._Comparisions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Machine_Printing_Job", Storage="_Machine", ThisKey="MachineID", OtherKey="MachineID", IsForeignKey=true)]
		public Machine Machine
		{
			get
			{
				return this._Machine.Entity;
			}
			set
			{
				Machine previousValue = this._Machine.Entity;
				if (((previousValue != value) 
							|| (this._Machine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Machine.Entity = null;
						previousValue.Printing_Jobs.Remove(this);
					}
					this._Machine.Entity = value;
					if ((value != null))
					{
						value.Printing_Jobs.Add(this);
						this._MachineID = value.MachineID;
					}
					else
					{
						this._MachineID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Machine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comparisions(Comparision entity)
		{
			this.SendPropertyChanging();
			entity.Printing_Job = this;
		}
		
		private void detach_Comparisions(Comparision entity)
		{
			this.SendPropertyChanging();
			entity.Printing_Job = null;
		}
	}
}
#pragma warning restore 1591
